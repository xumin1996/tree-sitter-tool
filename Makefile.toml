[env]
WASI_SDK_PATH = "/usr/local/wasi-sdk"
CC = "${WASI_SDK_PATH}/bin/clang"
CXX = "${WASI_SDK_PATH}/bin/clang++"
AR = "${WASI_SDK_PATH}/bin/ar"
WASI_SYSROOT = "${WASI_SDK_PATH}/share/wasi-sysroot"

[tasks.clean]
description = "清理环境"
command = "cargo"
args = ["clean"]

[tasks.build-release]
description = "编译release"
command = "cargo"
args = ["build", "--release"]

[tasks.build-musl]
description = "编译musl"
command = "cargo"
args = ["build", "--release", "--target", "x86_64-unknown-linux-musl"]

[tasks.build-wasm]
description = "编译wasm32-wasip1"
command = "cargo"
args = ["build", "--release", "--target", "wasm32-wasip1"]


[tasks.build-windows]
description = "编译x86"
command = "cross"
args = ["build", "--release", "--target", "x86_64-pc-windows-gnu"]

[tasks.copy-to-output]
description = "拷贝二进制文件"
script = [
    "mkdir -p target/output",
    "cp target/wasm32-wasip1/release/tree-sitter-tools.wasm target/x86_64-pc-windows-gnu/release/tree-sitter-tools.exe target/x86_64-unknown-linux-musl/release/tree-sitter-tools target/output"
]

[tasks.build-all]
description = "编译所有平台"
dependencies = ["clean", "build-release", "build-musl", "build-wasm", "build-windows", "copy-to-output"]
